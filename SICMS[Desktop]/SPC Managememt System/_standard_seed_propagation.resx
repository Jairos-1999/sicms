<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABE1JREFUaEPt
        Wk2IFEcUnkSNP6eAJAd/UIhxt6smalgSPSgsitNd4w/BsKccjAlBUTAoXkwUBkRRUA9GWKe7dxeJpz34
        T1TEQHLKLXhS8ZAlm2iC4G8i/qF+r6xZ2p7nON3VPSPiBx8z0/Xeq6/7dXW9qp7CG7yu6FvcMcn35JeB
        J4PAFb8EnrgC/gc+AR+D19F2EZ/HfU/sCJRcuE/NGGvc24uDizon+q7zbeiK34zgpLwD/hi60ntSKLxl
        wrYOA5/NeTdQYjtE3I6IsqMrfkdGl5su8gVdtdCTK9Hxv3VCMqLvOWf8cudM02X26F06czI6OhfvOCc+
        ACuVSuFt03026FdSYKD+Fessf7ryYKW7e7SRYYdQiY8R9FpdJy2jPDzYI98xctKhz5WzEegm30HrGHri
        WOrM0KMVAf7gAreDvpK7jLTmMdhTGIVJ62cuYDuJC9tjJDYHOKzmAr0CvEZ3ipHZGL2lWe/DAeUEG8iW
        /2PMPWKOJ6AMjNTGQDb28AHsiDLmp709U8ZjBl/FtTdP+ajP6+gwcnlQ2mBcK/QyI53EQPf0cdSHKW1Y
        u2aJiz2gBb8ImDM2cY429F1xpNrVNYbiY4Lbytmk4P2GY4UKN8YpNXM6CU3EXqNFx9FfKk7lHCx4qnY7
        odDcwLRbEZXySS08jmeLIt4pKZ/LhHK+52wy4J1aH88BE+ABxjgNRzKB7+tBWh1ydtb0y3KOFh8FGn6N
        GyYlZaJW4GG8fcfZZElfiS+0+CjQ8HfcMCFPj2TClevwO7dM1IhF2BYtPgo02MwfR2uZwDN+M9OeD5XY
        rcXXQEtYNKS7gq64UV3WNYHiBJ7zNY7lnokaaVzrE4gCDQ/jhk3yAZ5M8yiGXkkq8Q9jkxOd/Vp8FGiw
        KRRxWxa7Kc6Bxc6H+D0ca8+HKHe0+CjQcKHOMBHlzdCVn+pYS4oOjl2tt8mc67X4KOjRyRgm5Uhmer3O
        6Rj4ua4w+1SxpMVHgTJiG2ecmBj8LcuMmjVFi4+C9mJZ43RsRWYuaeFx0CMU9/ldxiEdkRnUb5/o2KWP
        OnGMNrV52zRUolcL5wCDQ3UOdhzJTFh2pmWaGVcs0KI54LlcZp1sGMkMLVFxLIvMDDXcTn02wzvnGUc7
        Rk7Gd+XnrE0SopbTghsBt8IK1tmWdDJKfoPvg3Vtyfhn0y+IYHwq5vwKsbjCyHw5wpJThNO9+iBt51kj
        sXmYSpYL1i4O96sZ7xl5yYB5JWQCtoHybtWT842s5NCb2dnUYDZ8iCee/btFOpnQdXymg9yJhdMtKp2M
        FHvQ5GO2Olu2+gOHq2Ux10jIFnrmb8EKELfSydQDu1nQO3ZfiR/QYdqlcSMO0cxvumoNqqr4Ae2Ko/Ms
        5psh33PWtvUvHZShUImvAuWcgCD6SwYnlONl2jygKjbz9+m2oL0tKg5pBxBCK7jKe/FZpW0bPPl2om2j
        XyoupcWWcXmD1xSFwlNt3RdRCJ41YgAAAABJRU5ErkJggg==
</value>
  </data>
</root>